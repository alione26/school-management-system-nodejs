extends ../layouts/common

block content
    link(rel="stylesheet", href="/styles/myTable.css")

    script(src='/plugins/jquery.tabledit.js')

    script(type='text/javascript').
      $(function () {
        $('[data-toggle="tooltip"]').tooltip();
      });
      var estimateWeight = 415;
      var rere;
      function re() {
        pageSize = $('html').html().length;
        kBytes = pageSize / 1024;
        // var temp = (Math.floor(Date.now() - timerStart) * 100 / EstimatedTime) < 100 ? (Math.floor((Date.now() - timerStart) * 100 / EstimatedTime)): Math.floor(99)
        var temp = (Math.floor(kBytes) * 100 / estimateWeight) < 100 ? (Math.floor(kBytes * 100 / estimateWeight)): Math.floor(99)
        $("#loaded").html("Loaded: " + temp + "%...");
        $("#loadedBar").css('width', temp+'%');
        $("#pageWeight").html('Page weight: ' + kBytes.toString() + ' KB');
      }

      rere = setInterval(re, 100);

      function stopRE(){
        clearInterval(rere);
        $("#loaded").html("Load completed!...");
        pageSize = $('html').html().length;
        kBytes = pageSize / 1024;
        $("#pageWeight").html('Page weight: ' + kBytes.toString() + ' KB');
        $("#loadedBar").css('width', '100%');
        setTimeout(function () {
          $("#loaded").fadeOut(100);
          $("#pageWeight").fadeOut(100);
          $("#loadedBar").fadeOut(100);
          $(".progress").fadeOut(100);
        }, 2000);
      }
      $(window).on('DOMContentLoaded', function (){
        // pageSize = $('html').html().length;
        // kBytes = pageSize / 1024;
        $('#loading').show();
        $('#loaded').show();
        $('#pageWeight').show();
        $('#loadedBar').show();
        $('.progress').show();

      }).on('load', ()=> {
        $('#loading').hide();
        $('#showdb0').show();
        stopRE();
        // $('#loaded').hide();
      });

      function edit(what) {
        reset();
        let content = $(what).children('span').html();
        $(what).children('span').hide();
        $(what).children('input').show();
        $(what).children('input').html(content);
        $(what).children('input').css('width', '100%');
        $(what).children('input').css('height', '100%');
        $(what).children('input').on('keyup', (e)=>{
          if (e.key === 'Enter') {
            // alert('YEs');
            Swal.fire({
              title: 'Do you want to save the changes?',
              icon: 'question',
              showDenyButton: true,
              showCancelButton: true,
              confirmButtonText: `Save`,
              denyButtonText: `Don't save`,
            }).then((result) => {
              /* Read more about isConfirmed, isDenied below */
              if (result.isConfirmed) {
                let isArray = $(what).children('input').val().indexOf('[') >= 0 || $(what).children('input').val().indexOf(']') >= 0
                let tempo = isArray ? $(what).children('input').val().slice(1,-1) : $(what).children('input').val();
                $(what).children('span').html(tempo);
                reset();
                // alert($(what).attr('name') + '\n' + $(what).children('span').attr('value') + '\n' + $(what).children('span').attr('name') + '\n' + $(what).children('input').attr('name') + '\n' + $(what).children('input').val());
                sendAjaxUpdate(
                    $(what).attr('name'),
                    $(what).children('span').attr('value'),
                    $(what).children('span').attr('name'),
                    $(what).children('input').attr('name'),
                    $(what).children('input').val());
              } else if (result.isDenied) {
                $(what).children('input').val($(what).children('span').html());
                Swal.fire('Changes are not saved', '', 'info')
              }
            })
          }
        })
      }
      function reset() {
        $('td>span').show();
        $('td>input').hide();
      }

      function showUp(what) {
        $("table").fadeOut();
        $(".bhu").fadeIn();

        let temp = $(what);

        $('#show' + temp.attr('id')).show();
        $('#dbName').html('Database: ' + temp.attr('name'));
        temp.fadeOut();
      }

      function showModal() {
        $("#exampleModalCenter").modal();
      }

      function sendAjaxUpdate(nameDB, nameOfIdField, id, field, value) {
        var csrfToken = $('#csrfTok').val();
        $.ajax({
          type: 'POST',
          url: '/data/update?_csrf=' + csrfToken,
          data: {
            "nameDB": nameDB,
            "nameOfIdField": nameOfIdField,
            "id": id,
            "field": field,
            "value": value
          },
          dataType: 'json',
          success: function (data) {
            // var ret = JSON.parse(data);
            var lengthMSG = (data.whatChanged).length < 100 ? (data.whatChanged): 'Change are not shown due to big content length.'
            $('#lblResponse').html(data.msg + ' ' + lengthMSG + '<button class="close btn-close btn-sm" type="button" aria-label="Close" onclick="klose();" ></button>');
            $('#lblResponse').show();
            // alert(ret.msg);
            Swal.fire(data.msg, lengthMSG, 'success');
          },
          error: function (xhr, status, error) {
            // console.log('Error: ' + error.message);
            // $('#lblResponse').html('Error connecting to the server.');
          }
        });
      }

      function klose() {
        $('#lblResponse').fadeOut();
      }
      // function sendAjax() {
      //   var csrfToken = $('#csrfTok').val();
      //   $.ajax({
      //     type: 'POST',
      //     url: '/data/getNotification?_csrf=' + csrfToken,
      //     data: '{"data": "TEST"}',
      //     dataType: 'json',
      //     success: function (data) {
      //       // var ret = JSON.parse(data);
      //       $('#lblResponse').html(data.msg);
      //       // alert(ret.msg);
      //     },
      //     error: function (xhr, status, error) {
      //       // console.log('Error: ' + error.message);
      //       // $('#lblResponse').html('Error connecting to the server.');
      //     }
      //   });
      // }
    .px-3.pt-3.mb-5.hide
        h1 Database board
        hr
        h4(style='float: left;') Choose database's name:
        button.btn.btn-outline-primary.ml-2.bhu#db0(style='position: relative; border-radius: 20px; display: none;' onclick='showUp(this);', name="USER") User
        button.btn.btn-outline-primary.ml-2.bhu#db1(style='position: relative; border-radius: 20px;' onclick='showUp(this);', name='ANNOUNCEMENT') Announcement
        button.btn.btn-outline-primary.ml-2.bhu#db2(style='position: relative; border-radius: 20px;' onclick='showUp(this);', name='DEPARTMENT') Department
        button.btn.btn-outline-primary.ml-2.bhu#db3(style='position: relative; border-radius: 20px;' onclick='showUp(this);', name='ROOM') Room
        button.btn.btn-outline-primary.ml-2.bhu#db4(style='position: relative; border-radius: 20px;' onclick='showUp(this);', name="STUDENT's SCHEDULE") Student's schedule
        button.btn.btn-outline-primary.ml-2.bhu#db5(style='position: relative; border-radius: 20px;' onclick='showUp(this);', name="TEACHER's SCHEDULE") Teacher's schedule
        button.btn.btn-outline-primary.ml-2.bhu#db6(style='position: relative; border-radius: 20px;' onclick='showUp(this);', name="SUBJECT") Subject
        button.btn.btn-outline-primary.ml-2.bhu#db7(style='position: relative; border-radius: 20px;' onclick='showUp(this);', name="ROOM's SCHEDULE") Room's schedule
        hr(style='clear:both;')
        script(type='text/javascript', src='https://res.cloudinary.com/dxfq3iotg/raw/upload/v1567487539/jquery.tabledit.js')
        .container.mb-5
            .row
                .col-md-12
                    .card
                        .card-header
                            h5#dbName Database: USER
                            h5#loaded
                            h5#pageWeight
                            .progress
                                #loadedBar.progress-bar.progress-bar-striped.progress-bar-animated
                            span Click on row to perform edit action then Enter for save
                        input#csrfTok(type='hidden' value=csrfToken)
                        h1#lblResponse.mid(style='display: none;')
                        #loading.loader.center(style='position: inherit; top: 100pt;')
                        - var pageStart = pageAt !== undefined ? parseInt(pageAt) : 0
                        - var longPage = pageLong !== undefined ? parseInt(pageLong) : 10
                        - var pageEnd = pageStart + longPage;
                        if (users)
                            .card-block
                                .table-responsive
                                  .table-wrapper-scroll-y.my-custom-scrollbar-data.ui-table-header-row
                                    table#showdb0.table.table-striped.table-bordered.table-hover.table-condensed(style='font-size: 15px; display:none;')

                                        tr.table-secondary.blue
                                            th(data-toggle='tooltip', data-placement='top', title='The orders in the database') No.
                                            each key in users[1]
                                                th(data-toggle='tooltip', data-placement='top', title=key)= key

                                        // each user in users[0]
                                        - var us = users[0].slice(pageStart, pageEnd)
                                        each user in us
                                            tr
                                                td.tabledit-view-mode#not
                                                    span= users[0].indexOf(user) + 1
                                                - var iter = 0
                                                each key in users[1]
                                                    td.tabledit-view-mode(id=iter, name='userDB', onclick=iter === 0 ? '' :'edit(this);', data-toggle='tooltip', data-placement='top', title=iter++ !== 0 ? 'Click to edit': 'ID cannot be edited!')
                                                        span.tabledit-span(name=user[users[1][0]], value=users[1][0])= user[key] !== undefined ? user[key] : '#'
                                                        input.tabledit-input.form-control.input-sm(type='text', name=key !== undefined ? key: null, value=user[key] !== undefined ? user[key]: null, style='display: none;')

                                    table#showdb1.table.table-striped.table-bordered.table-hover.table-condensed(style='font-size: 15px; display:none;')

                                        tr.table-secondary.blue
                                            th(data-toggle='tooltip', data-placement='top', title='The orders in the database') No.
                                            each key in announcements[1]
                                                th(data-toggle='tooltip', data-placement='top', title=key)= key

                                        - var us = announcements[0].slice(pageStart, pageEnd)
                                        each user in us
                                            tr
                                                td.tabledit-view-mode#not
                                                    span= announcements[0].indexOf(user) + 1
                                                - var iter = 0
                                                each key in announcements[1]
                                                  - var isEditable = iter !== 0 && iter !== 4
                                                  td.tabledit-view-mode(id=iter++, name='ancmDB', onclick=!isEditable ? '' : 'edit(this);', data-toggle='tooltip', data-placement='top', title=isEditable ? 'Click to edit': 'ID cannot be edited!')
                                                        span.tabledit-span(name=user[announcements[1][0]], value=announcements[1][0])= user[key] !== undefined ? user[key] : '#'
                                                        input.tabledit-input.form-control.input-sm(type='text', name=key !== undefined ? key : null, value=user[key] !== undefined ? user[key] : null, style='display: none;')

                                    table#showdb2.table.table-striped.table-bordered.table-hover.table-condensed(style='font-size: 15px; display:none;')

                                        tr.table-secondary.blue
                                            th(data-toggle='tooltip', data-placement='top', title='The orders in the database') No.
                                            each key in departments[1]
                                                th(data-toggle='tooltip', data-placement='top', title=key)= key

                                        - var us = departments[0].slice(pageStart, pageEnd)
                                        each user in us
                                            tr
                                                td.tabledit-view-mode#not
                                                    span= departments[0].indexOf(user) + 1
                                                - var iter = 0
                                                each key in departments[1]
                                                    td.tabledit-view-mode(id=iter, name='departmentDB', onclick=iter === 0 ? '' : 'edit(this);', data-toggle='tooltip', data-placement='top', title=iter++ !== 0 ? 'Click to edit': 'ID cannot be edited!')
                                                        span.tabledit-span(name=user[departments[1][0]], value=departments[1][0])= user[key] !== undefined ? user[key] : '#'
                                                        input.tabledit-input.form-control.input-sm(type='text', name=key !== undefined ? key : null, value=user[key] !== undefined ? user[key] : null, style='display: none;')

                                    table#showdb3.table.table-striped.table-bordered.table-hover.table-condensed(style='font-size: 15px; display:none;')

                                        tr.table-secondary.blue
                                            th(data-toggle='tooltip', data-placement='top', title='The orders in the database') No.
                                            each key in rooms[1]
                                                th(data-toggle='tooltip', data-placement='top', title=key)= key

                                        - var us = rooms[0].slice(pageStart, pageEnd)
                                        each user in us
                                            tr
                                                td.tabledit-view-mode#not
                                                    span= rooms[0].indexOf(user) + 1
                                                - var iter = 0
                                                each key in rooms[1]
                                                    td.tabledit-view-mode(id=iter, name='roomDB', onclick=iter === 0 ? '' : 'edit(this);', data-toggle='tooltip', data-placement='top', title=iter++ !== 0 ? 'Click to edit' : 'ID cannot be edited!')
                                                        span.tabledit-span(name=user[rooms[1][0]], value=rooms[1][0])= user[key] !== undefined ? user[key] : '#'
                                                        input.tabledit-input.form-control.input-sm(type='text', name=key !== undefined ? key : null, value=user[key] !== undefined ? user[key] : null, style='display: none;')


                                    table#showdb4.table.table-striped.table-bordered.table-hover.table-condensed(style='font-size: 15px; display:none;')

                                        tr.table-secondary.blue
                                            th(data-toggle='tooltip', data-placement='top', title='The orders in the database') No.
                                            each key in SDTSchedules[1]
                                                th(data-toggle='tooltip', data-placement='top', title=key)= key

                                        - var us = SDTSchedules[0].slice(pageStart, pageEnd)
                                        each user in us
                                            tr
                                                td.tabledit-view-mode#not
                                                    span= SDTSchedules[0].indexOf(user) + 1
                                                - var iter = 0
                                                each key in SDTSchedules[1]
                                                    td.tabledit-view-mode(id=iter, name='SDTScheduleDB', onclick=iter === 7 ? '' : 'edit(this);', data-toggle='tooltip', data-placement='top', title=iter++ !== 7 ? 'Click to edit': 'ID cannot be edited!')
                                                        span.tabledit-span(name=user[SDTSchedules[1][7]], value=SDTSchedules[1][7])= user[key] !== undefined ? user[key] : '#'
                                                        input.tabledit-input.form-control.input-sm(type='text', name=key !== undefined ? key : null, value=user[key] !== undefined ? user[key] : null, style='display: none;')

                                    table#showdb5.table.table-striped.table-bordered.table-hover.table-condensed(style='font-size: 15px; display:none;')

                                        tr.table-secondary.blue
                                            th(data-toggle='tooltip', data-placement='top', title='The orders in the database') No.
                                            each key in TCSchedules[1]
                                                th(data-toggle='tooltip', data-placement='top', title=key)= key

                                        - var us = TCSchedules[0].slice(pageStart, pageEnd)
                                        each user in us
                                            tr
                                                td.tabledit-view-mode#not
                                                    span= TCSchedules[0].indexOf(user) + 1
                                                - var iter = 0
                                                each key in TCSchedules[1]
                                                    td.tabledit-view-mode(id=iter, name='TCScheduleDB', onclick=iter === 7 ? '' : 'edit(this);', data-toggle='tooltip', data-placement='top', title=iter++ !== 7 ? 'Click to edit': 'ID cannot be edited!')
                                                        span.tabledit-span(name=user[TCSchedules[1][7]], value=TCSchedules[1][7])= user[key] !== undefined ? user[key] : '#'
                                                        input.tabledit-input.form-control.input-sm(type='text', name=key !== undefined ? key : null, value=user[key] !== undefined ? user[key] : null, style='display: none;')

                                    table#showdb6.table.table-striped.table-bordered.table-hover.table-condensed(style='font-size: 15px; display:none;')

                                        tr.table-secondary.blue
                                            th(data-toggle='tooltip', data-placement='top', title='The orders in the database') No.
                                            each key in subjects[1]
                                                th(data-toggle='tooltip', data-placement='top', title=key)= key

                                        - var us = subjects[0].slice(pageStart, pageEnd)
                                        each user in us
                                            tr
                                                td.tabledit-view-mode#not
                                                    span= subjects[0].indexOf(user) + 1
                                                - var iter = 0
                                                each key in subjects[1]
                                                    td.tabledit-view-mode(id=iter, name='subjectDB', onclick=iter === 0 ? '' : 'edit(this);', data-toggle='tooltip', data-placement='top', title=iter++ !== 0 ? 'Click to edit' : 'ID cannot be edited!')
                                                        span.tabledit-span(name=user[subjects[1][0]], value=subjects[1][0])= user[key] !== undefined ? user[key] : '#'
                                                        input.tabledit-input.form-control.input-sm(type='text', name= key !== undefined ? key : null, value=user[key] !== undefined ? user[key] : null, style='display: none;')

                                    table#showdb7.table.table-striped.table-bordered.table-hover.table-condensed(style='font-size: 15px; display:none;')

                                        tr.table-secondary.blue
                                            th(data-toggle='tooltip', data-placement='top', title='The orders in the database') No.
                                            each key in RSchedules[1]
                                                th(data-toggle='tooltip', data-placement='top', title=key)= key

                                        - var us = RSchedules[0].slice(pageStart, pageEnd)
                                        each user in us
                                            tr
                                                td.tabledit-view-mode#not
                                                    span= RSchedules[0].indexOf(user) + 1
                                                - var iter = 0
                                                each key in RSchedules[1]
                                                    td.tabledit-view-mode(id=iter, name='RScheduleDB', onclick=iter === 0 ? '' : 'edit(this);', data-toggle='tooltip', data-placement='top', title=iter++ !== 0 ? 'Click to edit' : 'ID cannot be edited!')
                                                        span.tabledit-span(name=user[RSchedules[1][0]], value=RSchedules[1][0])= user[key] !== undefined ? user[key] : '#'
                                                        input.tabledit-input.form-control.input-sm(type='text', name=key !== undefined ? key : null, value=user[key] !== undefined ? user[key] : null, style='display: none;')

                                nav.m-2(aria-label='Page navigation example')
                                    ul.pagination.justify-content-end
                                        - var cal = calb !== undefined ? parseInt(calb) : 1
                                        - var isBack = cal < 2 || (cal - 4) < 2
                                        - var isBack2 = (cal - 2) < -1
                                        li.page-item
                                            a.page-link(href='data?page=' + (cal - 4) + '&pageLong='+ longPage, tabindex='-1', aria-disabled='true', class=isBack ? 'disabled': '') Previous
                                        li.page-item
                                            a.page-link(href='data?page=' + (cal - 1) + '&pageLong=' + longPage, class=isBack2 ? 'disabled': '')= cal - 1
                                        li.page-item
                                            a.page-link.activePage(href='data?page=' + (cal) + '&pageLong=' + longPage)= cal
                                        li.page-item
                                            a.page-link(href='data?page=' + (cal + 1) + '&pageLong=' + longPage)= cal + 1
                                        li.page-item
                                            a.page-link(href='data?page=' + (cal + 4) + '&pageLong=' + longPage) Next

