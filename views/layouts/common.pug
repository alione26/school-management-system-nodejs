html

    head
        link(rel="stylesheet", href="/styles/dropdown.css")
        link(rel="icon", type="image/jpg", href="/images/002-layers.png")
        link(rel="stylesheet", href="/styles/snackbar.css")
        link(rel="stylesheet", href="/styles/custom.css")
        link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/sweetalert2@10.10.1/dist/sweetalert2.min.css')
        link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css')
        link(rel='stylesheet', href='https://fonts.googleapis.com/css?family=Sofia')
        link(rel='preconnect', href='https://fonts.gstatic.com')
        link(href='https://fonts.googleapis.com/css2?family=Newsreader:wght@300;400&display=swap', rel='stylesheet')

        ///bbb
        link(href='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css')
        link(href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.0.3/css/font-awesome.css')


        script(src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js')

        script(src='https://cdn.jsdelivr.net/npm/sweetalert2@10.10.1/dist/sweetalert2.all.min.js')


        script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js')

        ///
        script(src='/plugins/kit.fontawesome.js', crossorigin='anonymous')
        //script(src='https://kit.fontawesome.com/c6f5524848.js', crossorigin='anonymous')


        script(src='https://code.jquery.com/jquery-3.2.1.slim.min.js',
            integrity='sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN', crossorigin='anonymous')
        script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js')
        script(type='text/javascript', src='http://code.jquery.com/jquery-2.0.2.js')
        script(src='https://code.jquery.com/jquery-3.4.1.min.js')

        script(src='http://code.jquery.com/ui/1.8.17/jquery-ui.min.js')
        //script(src='jquery.ui.touch-punch.min.js')
        script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js',
            integrity='sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q', crossorigin='anonymous')
        script(src='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js',
            integrity='sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl', crossorigin='anonymous')
        //script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js')
        link(rel="stylesheet", href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css")

        script(src='https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js')

        //script(src='https://cdn.jsdelivr.net/npm/sweetalert2@10.10.1/dist/sweetalert2.all.min.js')

        script(src='/plugins/sweetalert.js')

        //script(src='https://cdn.jsdelivr.net/npm/sweetalert2@10.10.1/dist/sweetalert2.all.min.js')
        //link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/sweetalert2@10.10.1/dist/sweetalert2.min.css')
        //script(type='text/javascript', src='http://code.jquery.com/jquery-2.0.2.js')
        meta(name='viewport', content='width=device-width, initial-scale=1.0')

        //Display Tooltip
        //script(src='https://code.jquery.com/jquery-3.4.1.min.js')
        script(src='https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js')
        script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js')

        script(src='https://cdn.jsdelivr.net/npm/marked/marked.min.js')


        script(type='text/javascript', src='//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit')
        script(src='https://apis.google.com/js/api.js')

        script.
          $(function () {
            $('body').tooltip({selector: '[data-toggle="tooltip"]'});
          });
          $(function () {
            $(function () {
              $('[data-toggle="tooltip"]').tooltip();
            });
          });
          var timerStart = Date.now();
          var EstimatedTime = 3000;
          if (document.addEventListener) {
            document.addEventListener('contextmenu', function (e) {
              showModal();
              e.preventDefault();
            }, false);
          }
          function showModal() {
            $("#exampleModalCenter").modal();
          }
          var darkMode = $('#NMicon');
          $(window).on('DOMContentLoaded', function () {
            if (darkMode) {
              var darkThemeSelected = localStorage.getItem('darkMode') !== null && localStorage.getItem('darkMode') === 'dark';
              darkThemeSelected ? document.body.setAttribute('data-theme', 'dark') : document.body.removeAttribute('data-theme');
              darkThemeSelected ? $("#NMicon").attr('src', '/images/night-mode (1).png') : $("#NMicon").attr('src', '/images/night-mode.png');
              $("#NMicon").on('click', () => {
                darkModeNow();
              })
            }
          });

          var pageSize = $('html').html().length;
          var kBytes = pageSize / 1024;

          var idleTime = 0;
          $(function () {
            var idleInterval = setInterval(timerIncrement, 1000); // 1 minute
            //Zero the idle timer on mouse movement.
            $(document).on('mousemove',function (e) {
              idleTime = 0;
            });
            $(document).on('keypress',function (e) {
              idleTime = 0;
            });
          });
          let timerInterval;
          function timerIncrement() {
            idleTime = idleTime + 1;
            if (idleTime > 60) {
              idleTime = 0;
              Swal.fire({
                title: 'Reload due to inactive detected!',
                html: 'Reload in <b></b> seconds.',
                timer: 3000,
                timerProgressBar: true,
                didOpen: () => {
                  Swal.showLoading()
                  timerInterval = setInterval(() => {
                    const content = Swal.getContent()
                    if (content) {
                      const b = content.querySelector('b')
                      if (b) {
                        b.textContent = Math.floor(parseInt(Swal.getTimerLeft())/1000 + 1);
                      }
                    }
                  }, 100)
                },
                willClose: () => {
                  window.location.reload();
                  clearInterval(timerInterval);
                  // window.location.reload();
                }
              }).then((result) => {
                /* Read more about handling dismissals below */
                if (result.dismiss === Swal.DismissReason.timer) {
                  // window.location.reload();
                }
              })
            }
          }
        style.
            body {
                font-family: 'Newsreader', serif;
            }
        //link(rel="icon", href="http://sstatic.net/stackoverflow/img/favicon.ico")
    body(style="background-image: url('/images/3563935 (1).jpg'); background-position: center; background-repeat: no-repeat; background-attachment: fixed; min-width: 100%; min-height: 100%; background-size: cover;")
        #exampleModalCenter.modal.fade(tabindex='-1', role='dialog', aria-labelledby='exampleModalCenterTitle', aria-hidden='true')
            .modal-dialog.modal-dialog-centered(role='document')
                .modal-content
                    .modal-header
                        h3#exampleModalLongTitle.modal-title Context menu
                        button.close.btn-close(type='button', data-dismiss='modal', aria-label='Close')
                    .modal-body
                        a.btn.btn-primary.btn-lg.btn-block(href='mailto:katyperrycbt@gmail.com', style='color: white;') Contact admin
                        a.btn.btn-primary.btn-lg.btn-block(href='mailto:MySchool@school.edu.com', style='color: white;') Contact my school
                        a.btn.btn-primary.btn-lg.btn-block(href='/users/' + userInfo.loginId, style='color: white;', onclick='') Change password
                    .modal-footer
                        button.btn.btn-secondary(type='button', data-dismiss='modal') Close
        if (serverAlert)
            input#noty(value=serverAlert, style='display:none;')
            if (linkServerAlert)
                input#linkNoty(value=linkServerAlert, style='display:none;')
            script(type = 'text/javascript').
              var noti = $("#noty").val();
              var linkNoti = $("#linkNoty").val() ? $("#linkNoty").val(): '#';
              Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: noti,
                footer: '<a href='+linkNoti+'>Why do I have this issue?</a>'
              })

        script(type='text/javascript').
          // var $ar = jQuery.noConflict();
          $(function () {
            $('[data-toggle="tooltip"]').tooltip();
          });
          $('.hide').on('copy paste cut drag drop', function (e) {
            e.preventDefault();
          });


          function time() {

            var d = new Date();
            var s = d.getSeconds();
            var m = d.getMinutes();
            var h = d.getHours();
            $("#www").text(("0" + h).substr(-2) + ":" + ("0" + m).substr(-2) + ":" + ("0" + s).substr(-2));
          }

          setInterval(time, 10);

          function chill() {

            // Swal.fire('Hello');
            Swal.fire({
              title: 'Search for a movie. e.g. "La La Land".',
              input: 'text',
              inputAttributes: {
                autocapitalize: 'off'
              },
              showCancelButton: true,
              confirmButtonText: 'Look up',
              showLoaderOnConfirm: true,
              preConfirm: (login) => {
                return fetch(`https://itunes.apple.com/search?term=${login}&entity=movie`)
                    .then(response => {
                      if (!response.ok) {
                        throw new Error(response.statusText)
                      }
                      return response.json()
                    })
                    .catch(error => {
                      Swal.showValidationMessage(
                          `Request failed: ${error}`
                      )
                    })
              },
              allowOutsideClick: () => !Swal.isLoading()
            }).then((result) => {
              // alert(result);
              // Swal.fire(result.results[0]);
              if (result.isConfirmed) {
                const movie = result.value.results[0];

                if (!movie) {
                  return Swal.fire("No movie was found!");
                }

                const name = movie.trackName;
                const imageURL = movie.artworkUrl100;
                const movieURL = movie.trackViewUrl;

                Swal.fire({
                  html: '<h1>Top result: <h5>' + name +'</h5><small id="myInputs" style="font-size:smaller;">' + movieURL
                      + '</small><br><button onclick="copyToClipboard(\'#myInputs\', this)" class="btn btn-outline-primary">Copy</button></h1>',
                  imageUrl: imageURL,
                });
              } else {
                Swal.fire('Oops!');
              }
            })
          }
          function chill2() {
            var accessToken = $('#getToken').val();


            // alert(typeof accessToken);
            Swal.fire({
              title: 'Search for a song. e.g. "Dynamite".',
              input: 'text',
              inputAttributes: {
                autocapitalize: 'off'
              },
              showCancelButton: true,
              confirmButtonText: 'Look up',
              showLoaderOnConfirm: true,
              preConfirm: (login) => {
                var url = 'https://api.spotify.com/v1/search?q=' + login + ' &type=track&limit=1&access_token=' + accessToken;
                return fetch(url)
                    .then(response => {
                      if (!response.ok) {
                        throw new Error(response.statusText)
                      }
                      return response.json()
                    })
                    .catch(error => {
                      Swal.showValidationMessage(
                          `Request failed: ${error}`
                      )
                    })
              },
              allowOutsideClick: () => !Swal.isLoading()
            }).then((result) => {
              // alert(result);
              // Swal.fire(result.results[0]);
              if (result.isConfirmed) {
                const track = result.value.tracks;

                if (!track) {
                  return Swal.fire("No song was found! [Refresh page and try again!]");
                }

                const name = track.items;
                const ob = name[0];
                const external_URl = ob.external_urls;
                const link = external_URl.spotify;
                const imageURL = ob.album.images[1].url;

                String.prototype.splice = function (idx, rem, str) {
                  return this.slice(0, idx) + str + this.slice(idx + Math.abs(rem));
                };

                var emBed = link.splice(25, 0, "embed/");

                Swal.fire({
                  html: '<h1>Top result: <br><small id="myInput" style="font-size:smaller;">' + link
                      +'</small><br><button onclick="copyToClipboard(\'#myInput\', this)" class="btn btn-outline-primary">Copy</button></h1><br><iframe src="' + emBed
                      +'" width="300" height="380" frameborder="0" ' +
                      'allowtransparency="true" allow="encrypted-media" autoplay="true"></iframe>',
                  // imageUrl: imageURL,
                  confirmButtonText: `Play this snippet as background song`,
                  showCancelButton: true
                }).then((results) => {
                  if (results.isConfirmed) {
                    $("#backgroundSong").prop('hidden', "true");
                    playSong(emBed);
                  } else {
                  }
                });

              } else {
                Swal.fire('Oops!');
              }}
            )
          }

          function copyToClipboard(element, root) {
            var $temp = $("<input>");
            $("body").append($temp);
            $temp.val($(element).text()).trigger('select');
            document.execCommand("copy");
            $temp.remove();
            $(root).html('Copied');
          }

          let parent
          function playSong(song) {
            if ($('iframe#backgroundSong').parent() !== undefined) {
              parent = $('iframe#backgroundSong').parent();
              $('iframe#backgroundSong').remove();
              $("#stop").hide();
            }
            var newElement = "<iframe src='" +song+ "' id='backgroundSong' style='float: left; border: 3px solid yellow; border-radius: 15px;' loop='false' width='auto' height='80'></iframe>";

            // $('embed#backgroundSong').remove();
            // $("#stop").hide();
            parent.append(newElement);
            $("#stop").show();
            // alert('zcurrent ' + $("#backgroundSong").attr('src'))
          }
          function stopSong() {
            var stopBTN = $("#stop");
            // stopBTN.on('click', () => {
            parent = $('iframe#backgroundSong').parent();
            $('iframe#backgroundSong').remove();
            var newElement = "<iframe src='' id='backgroundSong' style='float: right;' loop='false' width='auto' height='80' hidden=true></iframe>";
            parent.append(newElement);
            stopBTN.hide();
              // alert('parent ' + parent)
            // })
          }

          function chill3(){
            var apiKey = $('#getApiKey').val();

            Swal.fire({
              title: 'Search for a video. e.g. "Levitating".',
              input: 'text',
              inputAttributes: {
                autocapitalize: 'off'
              },
              showCancelButton: true,
              confirmButtonText: 'Look up',
              showLoaderOnConfirm: true,
              preConfirm: (login) => {
                var url = 'https://www.googleapis.com/youtube/v3/search?q='+login+'&maxResults=1&key=' + apiKey;
                return fetch(url)
                    .then(response => {
                      if (!response.ok) {
                        throw new Error(response.statusText)
                      }
                      return response.json()
                    })
                    .catch(error => {
                      Swal.showValidationMessage(
                          `Request failed: ${error}`
                      )
                    })
              },
              allowOutsideClick: () => !Swal.isLoading()
            }).then((result) => {
                  // alert(result);
                  // Swal.fire(result.results[0]);
                  if (result.isConfirmed) {
                    const items = result.value.items;

                    if (!items) {
                      return Swal.fire("No video was found! [Refresh page and try again!]");
                    }

                    const video = items[0];
                    const idVideo = video['id'];
                    const codeVideo = idVideo['videoId'];
                    const link = 'https://youtu.be/' + codeVideo;
                    const linkEm = 'https://www.youtube.com/embed/' + codeVideo;


                    Swal.fire({
                      html: '<h1>Top result: <br><small id="myInput3" style="font-size: smaller;">' + link
                          + '</small><br><button onclick="copyToClipboard(\'#myInput3\', this)" class="btn btn-outline-primary">Copy</button></h1><br><iframe src="' + linkEm
                          + '" width="100%" height="100%" frameborder="0" ' +
                          'allowtransparency="true" allow="accelerometer; autoplay; clipboard-write; ' +
                          'encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>',
                      // imageUrl: imageURL,
                      confirmButtonText: `Pin this video`,
                      showCancelButton: true
                    }).then((results) => {
                      if (results.isConfirmed) {
                        $("#backgroundVideo").prop('hidden', "true");
                        playVideo(linkEm);
                      } else {
                      }
                    });

                  } else {
                    Swal.fire('Oops!');
                  }
                }
            )
          }

          let parentVideo
          function playVideo(video) {
            if ($('iframe#backgroundVideo').parent() !== undefined) {
              parentVideo = $('iframe#backgroundVideo').parent();
              $('iframe#backgroundVideo').remove();
              $("#stopVideo").hide();
              $("#mydiv").hide();
            }
            var newElement = "<iframe src='" + video + "'id='backgroundVideo' allowtransparency='true' style='float: right; " +
                "border-bottom-left-radius: 15px; border-bottom-right-radius: 15px;' loop='false' width='auto' height='200' " +
                "allow='accelerometer; autoplay; clipboard-write;picture-in-picture; encrypted-media; gyroscope;' allowfullscreen></iframe>";
            parentVideo.append(newElement);
            $("#stopVideo").show();
            $("#mydiv").show();
          }

          function stopVideo() {
            // var stopBTN = $("#stopVideo");
            // stopBTN.on('click', () => {
              parentVideo = $('iframe#backgroundVideo').parent();
              $('iframe#backgroundVideo').remove();
              var newElement = "<iframe src='' id='backgroundVideo' style='float: right;' loop='false' width='auto' height='200'></iframe>";
              parentVideo.append(newElement);
              // stopBTN.hide();
              $("#mydiv").hide();
            // })
          }
          // $("#backgroundVideo").resiz

        if (spotifyToken)
            input#getToken(type='hidden', value=spotifyToken)
        if (youtube)
            input#getApiKey(type='hidden', value=youtube)
        div
            img.cropimg(src="/images/27240 (1).jpg", alt='Navigation img', width="100%", height="auto")
        .sticky-top
            nav.navbar.navbar-expand-lg.navbar-light.bg-light(style='border-bottom: 1px solid gray;')
                a.navbar-brand(href='/')
                    img.d-inline-block.align-top.mr-2(src='/images/002-layers.png', width='30', height='30', alt='')
                    |MySchool.io
                button.navbar-toggler(type='button', data-toggle='collapse', data-target='#navbarNav',
                    aria-controls='navbarNav', aria-expanded='false', aria-label='Toggle navigation')
                    span.navbar-toggler-icon
                #navbarNav.collapse.navbar-collapse
                    ul.navbar-nav.mr-auto
                        li.nav-item.mx-2
                            a.nav-link(href='/', data-toggle='tooltip', data-placement='top', title='Home page')
                                img(src='/images/home (1).png' width="40" alt='Home')
                        li.nav-item.mr-2
                            a.nav-link(href='/school/announcements', data-toggle='tooltip', data-placement='top', title='View your announcement!')
                                img(src='/images/envelope (1).png' width="40" alt='Announcements')
                        li.nav-item.mr-0
                            a.nav-link(href='/users', data-toggle='tooltip', data-placement='top', title='View info')
                                img(src='/images/skills (1).png' width="40" alt='View/Edit info')
                        li.nav-item.mr-2
                            a.nav-link(href='/auth/login', class=userInfo.name === " " ? 'nav-link': 'nav-link disabled', hidden=userInfo.name !== ' ', data-toggle='tooltip', data-placement='top', title='Log in')
                                img(src='/images/log-in.png' width="40" alt='Log in')
                        if (userInfo.role === 10)
                            li.nav-item.mr-2
                                a.nav-link(href='/users/create', data-toggle='tooltip', data-placement='top', title='Create a new account')
                                    img(src='/images/contract (1).png' width="40" alt='New account')
                        if (userInfo.role === 0)
                            li.nav-item.mr-2
                                a.nav-link(href='/users/register', data-toggle='tooltip', data-placement='top', title='Register for courses!')
                                    img(src='/images/registration (1).png' width="40" alt='Course registration')
                        if (userInfo.role !== 10 && userInfo.role !== " ")
                            li.nav-item.mr-2
                                a.nav-link(href='/users/schedule', data-toggle='tooltip', data-placement='top', title='See your schedule!')
                                    img(src='/images/calendar (1).png' width="40" alt='Schedule')
                        if (userInfo.role === 1)
                            li.nav-item.mr-2
                                a.nav-link(href='/school/courseAllocation', data-toggle='tooltip', data-placement='top', title='Download your student lists')
                                    img(src='/images/education.png' width="40" alt='View/Edit info')
                        if (userInfo.role === 10)
                            li.nav-item.dropdown.mr-2
                                button#dropdownMenuButton.btn.btn-primary.dropdown-toggle(type='button',
                                    data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')
                                    img(src='/images/unauthorized-person (1).png' width="40" alt="Admin's functions" data-toggle='tooltip', data-placement='top', title="Admin board")
                                .dropdown-menu(aria-labelledby='dropdownMenuButton')
                                    a.dropdown-item(href='/school/createSubject', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Set subject's time
                                    a.dropdown-item(href='/school/assignTeacherToSubject', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Set subject's lecturer
                                    a.dropdown-item(href='/school/createAnnouncement', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Post new announcement
                                    a.dropdown-item(href='/school/createBatchSubject', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Create subjects
                                    a.dropdown-item(href='/school/autoAssignTeacherToSubject', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Auto assign lecturers to subjects
                        if (userInfo.role === 10 && userInfo.dev === true)
                            li.nav-item.dropdown.mr-2
                                button#dropdownMenuButton.btn.btn-danger.dropdown-toggle(type='button',
                                    data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')
                                    img(src='/images/web-development.png' width="40" alt="Developer's functions" data-toggle='tooltip', data-placement='top', title="Developer board")
                                .dropdown-menu(aria-labelledby='dropdownMenuButton')
                                    a.dropdown-item.disabled(href='/school/eliminate', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Eliminate Duplicates
                                    a.dropdown-item.disabled(href='/school/assign', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Assign
                                    a.dropdown-item.disabled(href='/school/generate', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Subject Generating
                                    a.dropdown-item.disabled(href='/school/createDepartment', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Create Department
                                    a.dropdown-item.disabled(href='/school/createDepartment/assignSubjectToDepartment', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Assign Subject to Department
                                    a.dropdown-item.disabled(href='/school/assignStandardSchedule', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Assign Standard Table
                                    a.dropdown-item.disabled(href='/school/assignStudentAndTeacherID', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Assign readable ID
                                    a.dropdown-item.disabled(href='/school/create100weeks', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Create 100 weeks
                                    a.dropdown-item.disabled(href='/school/create100rooms', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Create 100 rooms
                                    a.dropdown-item.disabled(href='/school/bind100roomsWith100weeks', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Bind 100 rooms with 100 weeks
                                    a.dropdown-item.disabled(href='/school/assignFacultyForStudentsAndTeachers', data-toggle='tooltip', data-placement='right', title='Be careful before clicking!') Assign faculty for students and teachers
                            li.nav-item.mr-2
                                a.btn.btn-success.nav-link(href='/data', data-toggle='tooltip', data-placement='top', title='Database board' style='padding: 6px')
                                    img(src='/images/database.png' width="40" alt='Database board')
                            li.nav-item.mr-2
                                a.btn.btn-info.nav-link(href='/data/giveAccessKey', data-toggle='tooltip', data-placement='top', title='Give access key' style='padding: 6px')
                                    img(src='/images/key.png' width="40" alt='Give access key')
                        li.nav-item.mr-2
                            a.btn.btn-warning.nav-link(href='/policy', data-toggle='tooltip', data-placement='top', title='Policy' style='padding: 6px')
                                img(src='/images/policy.png' width="40" alt='Policy')
                    #google_translate_element(style='position: relative; opacity: 1; z-index: 10;' hidden)

                    ul.navbar-nav
                        li.nav-item
                            input.mx-2.zx#NMicon(type='image' src='/images/night-mode.png' alt='Night mode' width='40' style='clear: both;' data-toggle='tooltip', data-placement='top', title='Night mode')
                        li.nav-item
                            button.btn.btn-info(id='www', data-toggle='tooltip', data-placement='top', title='Time')
                        li.nav-item
                          .translation-links
                            input.vietnamese.mx-2(type="image" src="/images/vietnam.png" width="40" data-lang='Vietnamese' style='border-radius: 10px;', data-toggle='tooltip', data-placement='top', title='Vietnamese')
                            input.english.mr-2(type="image" src="/images/america.png" width="40" data-lang='English' style='border-radius: 10px;', data-toggle='tooltip', data-placement='top', title='English')
                            input.china.mr-2(type="image" src="/images/china.png" width="40" data-lang='Chinese' style='border-radius: 10px;', data-toggle='tooltip', data-placement='top', title='Chinese')

                    script(type='text/javascript').
                      $(function () {
                        $('.translation-links input').on('click', function () {
                          var lang = $(this).data('lang');
                          var $frame = $('.goog-te-menu-frame:first');
                          if (!$frame.length) {
                            alert("Error: Could not find Google translate frame.");
                            return false;
                          }
                          $frame.contents().find('.goog-te-menu2-item span.text:contains(' + lang + ')').get(0).click();
                          return false;
                        });

                      });

                    script(type='text/javascript').
                      function googleTranslateElementInit() {
                        new google.translate.TranslateElement({
                          pageLanguage: 'en',
                          layout: google.translate.TranslateElement.InlineLayout.SIMPLE
                        }, 'google_translate_element');
                      }

                      // var darkMode = $('#NMicon');
                      // window.addEventListener('load', function () {
                      //   if (darkMode) {
                      //     var darkThemeSelected = localStorage.getItem('darkMode') !== null && localStorage.getItem('darkMode') === 'dark';
                      //     darkThemeSelected ? document.body.setAttribute('data-theme', 'dark') : document.body.removeAttribute('data-theme');
                      //     darkThemeSelected ? $("#NMicon").attr('src', '/images/night-mode (1).png') : $("#NMicon").attr('src', '/images/night-mode.png');
                      //     $("#NMicon").on('click', ()=>{
                      //       darkModeNow();
                      //     })
                      //   }
                      // });
                      function darkModeNow() {
                        var isChecked = $("#NMicon").attr('src');
                        var element = document.body;
                        if (isChecked === '/images/night-mode.png') {
                          element.setAttribute('data-theme', 'dark');
                          localStorage.setItem('darkMode', 'dark');
                          $("#NMicon").attr('src', '/images/night-mode (1).png')
                        } else {
                          // darkMode(oops);
                          element.removeAttribute('data-theme');
                          localStorage.removeItem('darkMode');
                          $("#NMicon").attr('src', '/images/night-mode.png')
                        }
                      }


                    span.form-inline.my-2.mr-2.my-lg-0.zx=  userInfo.name
                    //span.zx &nbsp;
                    ul.navbar-nav
                        li.nav-item.button.btn.btn-outline-secondary.form-inline#kl(type='button', onclick='logout()', hidden=userInfo.name === " ", disabled=userInfo.name === " ") Log out
                    script(type='text/javascript').
                      function logout() {
                        document.cookie = "userID=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
                        // console.log(userInfo.name + "oops");
                        location.reload();
                        userInfo.name = " ";
                      }
            script.
              function runTog() {
                var isChecked = $("#tog").is(":checked");
                if (isChecked) {
                  $('.hideTog').show();
                  $('#breadd').css('padding', '10px 12px 2px');
                  $('.icon-bar').css('left', '0px');
                  $('.icon-bar').css('opacity', '1');
                  $('.iconBar').css('right', '0px');
                  $('.iconBar').css('opacity', '1');
                  // $('#breadd').css('background-color', '#eee');
                } else {
                  $('.hideTog').hide();
                  $('#breadd').css('padding', '10px 10px 2px 3px');
                  // $('.icon-bar').hide();
                  $('.icon-bar').css('left', '-80px');
                  $('.icon-bar').css('opacity', '0');
                  $('.iconBar').css('right', '-80px');
                  $('.iconBar').css('opacity', '0');
                  // $('#breadd').css('background-color', 'white');
                }
                // alert(isChecked);
              }

            if (breadcrumb && breadLink)
                ul.breadcrumb.mt-2.mx-2#breadd(style='float:left; display: inline-block; width: fit-content; border: 1px solid gray;')
                  - var kout = 0
                  each breads in breadcrumb
                    li.hideTog
                        a(href=breadLink[kout++])= breads

                  div.ml-2.p-0.ct(style='float: right; position: relative;')
                       label.switch(data-toggle='tooltip', data-placement='right', title='Open/Close extensions')
                          input#tog(type='checkbox' onclick='runTog();' checked)
                          span.slider.round
            //.btn.sm-btn.btn-success(style='') &times;
            div.mx-2
                iframe#backgroundSong(name='BackgroundSong', style='border: 2px solid yellow; border-radius: 15px;' loop='false', width="auto" height="80" hidden=true)
            button.btn.btn-warning.sm-btn.ml-2.mt-3#stop(style='display:none; float: left; left: 500px;' onclick='stopSong();') Remove song &times;

            //#mydiv
            //    #mydivheader Click here to move
            //    iframe(width='420', height='345', src='https://www.youtube.com/embed/tgbNymZ7vqY')
            div#mydiv(style='display: none; border: 2px solid yellow; border-radius: 15px; top: 60%; left: 42%;')
                //p#demo
                #mydivheader(style='border-top-left-radius: 15px; border-top-right-radius: 15px;') Click here to move
                    button.close#stopVideo(type='button', onclick='stopVideo();' data-toggle='tooltip', data-placement='right', title='Close') &times;
                //iframe(width='420', height='345', src='https://www.youtube.com/embed/tgbNymZ7vqY')
                iframe#backgroundVideo(name='BackgroundVideo', style='border: 2px solid yellow; border-radius: 15px;' loop='false', width="auto" height="80" hidden=true)
            //button.btn.btn-warning.sm-btn.ml-2.mt-3#stopVideo(style='display:none; float: right; left: 500px;' onclick='stopVideo();') Remove video &times;

            script.
              dragElement(document.getElementById("mydiv"));

              function dragElement(elmnt) {
                var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;
                if (document.getElementById(elmnt.id + "header")) {
                  // if present, the header is where you move the DIV from:
                  document.getElementById(elmnt.id + "header").onmousedown = dragMouseDown;
                } else {
                  // otherwise, move the DIV from anywhere inside the DIV:
                  elmnt.onmousedown = dragMouseDown;
                }

                function dragMouseDown(e) {
                  e = e || window.event;
                  e.preventDefault();
                  // get the mouse cursor position at startup:
                  pos3 = e.clientX;
                  pos4 = e.clientY;
                  document.onmouseup = closeDragElement;
                  // call a function whenever the cursor moves:
                  document.onmousemove = elementDrag;
                }

                function elementDrag(e) {
                  e = e || window.event;
                  e.preventDefault();
                  // calculate the new cursor position:
                  pos1 = pos3 - e.clientX;
                  pos2 = pos4 - e.clientY;
                  pos3 = e.clientX;
                  pos4 = e.clientY;
                  // set the element's new position:
                  elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
                  elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";
                }

                function closeDragElement() {
                  // stop moving when mouse button is released:
                  document.onmouseup = null;
                  document.onmousemove = null;
                }
              }

        .container.pt-3.my-5#ddd(style='border: 2px solid green; border-radius: 30px; height: auto;')
                block content
        .container.pt-3.my-5

        .icon-bar
            a.facebook(href='https://www.facebook.com/thuc.katy')
                i.fab.fa-facebook
            a.twitter(href='#')
                i.fab.fa-twitter
            a.google(href='#')
                i.fab.fa-google
            a.linkedin(href='https://www.linkedin.com/in/trần-thức-b82a24146')
                i.fab.fa-linkedin
            a.youtube(href='https://www.youtube.com/channel/UClyA28-01x4z60eWQ2kiNbA')
                i.fab.fa-youtube

        .iconBar
            a.itunes(type='button' onclick='chill();', data-toggle='tooltip', data-placement='left', title='Search for a movie!')
                i.fab.fa-apple
                //input(type="image" src="/images/itunes.png" width="40" onclick='chill();', data-toggle='tooltip', data-placement='top', title='Search for a movie!')
            a.spotify(type='button' onclick='chill2();', data-toggle='tooltip', data-placement='left', title='Search for a song!')
                i.fab.fa-spotify
                //input(type="image" src="/images/spotify 2.png" width="40" onclick='chill2();', data-toggle='tooltip', data-placement='top', title='Search for a song!')
            a.youtube(type='button' onclick='chill3();', data-toggle='tooltip', data-placement='left', title='Search for a video!')
                i.fab.fa-youtube
                //input(type="image" src="/images/youtube.png" width="40" onclick='chill3();', data-toggle='tooltip', data-placement='top', title='Search for a video!')


        footer
            p
                | © MySchool.io
                br
                a(href='mailto:katyperrycbt@gmail.com', style='color: white;') katyperrycbt@gmail.com