extends ../layouts/common

block content
    link(rel="stylesheet", href="/styles/cellHover.css")
    script.
      $(function () {
        $('[data-toggle="tooltip"]').tooltip();
      });
      // $('.alert').alert();
    - var isAdmin = userInfo.role === 10;
    if (!isAdmin)
         script(type='text/javascript').
           swal("Your are not allowed to visit this page.", {
             icon: "warning",
             timer: 3000,
           }).then(() => {
             document.cookie = "userID=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
             location.reload();
             userInfo.name = " ";
           });
    script(type='text/javascript').
      function checkEnglish() {
        // $("#z").removeAttr('disabled');
        $("#t").hide();

        var isNull = $("#content").val();
        if (isNull === null || !isNull || isNull === "" || isNull === undefined) {
          $("#z").attr('disabled', 'true');
          $("#t").hide();
        } else if (/^[^àáãạảăắằẳẵặâấầẩẫậèéẹẻẽêềếểễệđìíĩỉịòóõọỏôốồổỗộơớờởỡợùúũụủưứừửữựỳỵỷỹýÀÁÃẠẢĂẮẰẲẴẶÂẤẦẨẪẬÈÉẸẺẼÊỀẾỂỄỆĐÌÍĨỈỊÒÓÕỌỎÔỐỒỔỖỘƠỚỜỞỠỢÙÚŨỤỦƯỨỪỬỮỰỲỴỶỸÝ]+$/.test($("#content").val())) {
          $("#z").removeAttr('disabled');
          $("#t").hide();
        } else {
          $("#z").attr('disabled', 'true');
          $("#t").show();
        }

        // var text = $("#content").val().replace(/\s/g); //read input value, and remove "space" by replace \s
        // //Dictionary for Unicode range of the languages
        // var langdic = {
        //   "Arabic": /[\u0600-\u06FF]/,
        //   "Persian": /[\u0750-\u077F]/,
        //   "Hebrew": /[\u0590-\u05FF]/,
        //   "Syriac": /[\u0700-\u074F]/,
        //   "Bengali": /[\u0980-\u09FF]/,
        //   "Ethiopic": /[\u1200-\u137F]/,
        //   "Greek and Coptic": /[\u0370-\u03FF]/,
        //   "Georgian": /[\u10A0-\u10FF]/,
        //   "Thai": /[\u0E00-\u0E7F]/,
        //   "English": /^[a-zA-Z]+$/
        //   //add other languages her
        // }
        // //const keys = Object.keys(langdic); //read  keys
        // //const keys = Object.values(langdic); //read  values
        // const keys = Object.entries(langdic); // read  keys and values from the dictionary
        // Object.entries(langdic).forEach(([key, value]) => {  // loop to read all the dictionary items if not true
        //   if (value.test(text) == true) {   //Check Unicode to see which one is true
        //     return document.getElementById("j").innerHTML = key; //print language name if unicode true
        //   }
        // });
      };

    .px-3.pt-3.hide
        h1#j(style='color: blue;') New announcement
        .container-fluid.my-5.hide
            .row
                .col-md-12
                    if errs
                      each err in errs
                        .alert.alert-danger= err
                    form(action="/school/postThisAnnouncement", method="POST", name="Create", id='Create')
                        script(type='text/javascript').
                          function confirmSave() {
                            swal({
                              title: "Create this announcement?",
                              text: "Once posted, users could be able to see this announcement right away!",
                              icon: "warning",
                              buttons: true,
                              dangerMode: true,
                            }).then((willSave) => {
                              if (willSave) {
                                swal("Post successfully!", {
                                  icon: "success",
                                  timer: 1000,
                                }).then(() => {
                                  document.getElementById('Create').submit();
                                });
                              } else {
                                swal("Let's reconsider!", {
                                  icon: 'error',
                                  timer: 1000
                                });
                              }
                            });
                            return false;
                          }
                        .form-group
                            input(type='hidden', name='_csrf', value=csrfToken)
                            label(for='to') To
                            input#to.form-control(name="to", type="text", value=values ? values.to : '', placeholder="all or ITITIU18125, ITITIU18110, ITITI18066...",
                                class=values ? (values.to ? 'is-valid' : 'is-invalid'): '')
                            .valid-feedback(class=values ? (values.to ? 'valid-feedback' : 'invalid-feedback'): '')= values ? (values.to ? 'Looks good!' : 'Please provide list of ID or type "all"!') : ''
                            label(for='title') Title
                            input#title.form-control(name="title", type="text", value=values ? values.title : '', placeholder="Ex: Regulations of Final Examination",
                                class=values ? (values.title ? 'is-valid' : 'is-invalid'): '')
                            .valid-feedback(class=values ? (values.title ? 'valid-feedback' : 'invalid-feedback'): '')= values ? (values.title ? 'Looks good!' : 'Please provide a title!') : ''
                            label(for='content')
                              span(style='font-style: italic;')
                                span(style='font-style: normal;') Content&nbsp;[
                                |You can use &nbsp;
                                a(href='https://www.markdownguide.org/basic-syntax/') Markdown&nbsp;
                                | syntax to emphasize your announcement!
                                span(style='font-style: normal;') ]
                            textarea#content.form-control(name="content", rows='10', cols='100%', value=values ? values.content: '', placeholder="Ex: " +
                            "                            \n" +
                            "                            1.      For students owing tuition fees:\n" +
                            "                            \n" +
                            "                            -       Students who owe 1.000.000 VND shall be considered tuition debt, will not be allowed to take the exam.\n" +
                            "                            \n" +
                            "                            2.      For students who do not complete tuition on time:\n" +
                            "                            \n" +
                            "                            -       Students who pay tuition later than January 4, 2021 must present the tuition fee receipt or confirm that they have paid tuition from MySchool.io web system when entering the examination room.",
                                    class=values ? (values.content ? 'is-valid' : 'is-invalid'): '', onkeyup="checkEnglish();")
                            .valid-feedback(class=values ? (values.content ? 'valid-feedback' : 'invalid-feedback'): '')= values ? (values.content ? 'Looks good!' : 'Please provide the content of announcement!') : ''

                        button.alert.btn.btn-primary#z(type='button' onclick='confirmSave()' disabled style='float:left; vertical-align : middle;')= 'POST'
                        .alert.alert-danger.ml-2.alert-dismissible.fade.show#t(style='display: none; float: left;')
                            strong Only English contents are allowed!
                            button.close(type='button', data-dismiss='alert', aria-label='Close')
                                span(aria-hidden='true') &times;

